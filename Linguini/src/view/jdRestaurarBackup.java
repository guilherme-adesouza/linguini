/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.MensagemRetorno;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import utils.controller.Backup;

/**
 *
 * @author guilherme-souza
 */
public class jdRestaurarBackup extends javax.swing.JDialog {

    /**
     * Creates new form jdBackup
     */
    public jdRestaurarBackup(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        cmbBanco = new javax.swing.JCheckBox();
        cmbAplicacao = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnIniciarRestore = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtLocalBackup = new javax.swing.JTextField();
        btnSelecionarArquivo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Restauração de Backup");

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnFechar.setBackground(new java.awt.Color(51, 102, 255));
        btnFechar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnFechar.setForeground(new java.awt.Color(254, 254, 254));
        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/icons8-importar-48.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setBorderPainted(false);
        btnFechar.setContentAreaFilled(false);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFechar.setName("btnFechar"); // NOI18N
        btnFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFechar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        cmbBanco.setText("Banco de Dados");
        cmbBanco.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cmbBancoStateChanged(evt);
            }
        });
        cmbBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBancoActionPerformed(evt);
            }
        });

        cmbAplicacao.setText("Aplicação");
        cmbAplicacao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cmbAplicacaoStateChanged(evt);
            }
        });
        cmbAplicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAplicacaoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 2, 12)); // NOI18N
        jLabel1.setText("Restaura backup dos dados inseridos no sistema");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 2, 12)); // NOI18N
        jLabel2.setText("Restaura backup APENAS do sistema instalado");

        btnIniciarRestore.setText("Iniciar Restauração");
        btnIniciarRestore.setEnabled(false);
        btnIniciarRestore.setName("btnBackup"); // NOI18N
        btnIniciarRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarRestoreActionPerformed(evt);
            }
        });

        jLabel3.setText("Local do Backup *");

        txtLocalBackup.setEditable(false);

        btnSelecionarArquivo.setText("Selecionar");
        btnSelecionarArquivo.setPreferredSize(new java.awt.Dimension(99, 29));
        btnSelecionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIniciarRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLocalBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSelecionarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1))
                            .addComponent(cmbAplicacao)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel2))
                            .addComponent(cmbBanco))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLocalBackup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cmbBanco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cmbAplicacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addComponent(btnIniciarRestore)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnIniciarRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarRestoreActionPerformed
        if(this.txtLocalBackup.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Selecione um arquivo para restauração do backup", "Aviso", JOptionPane.WARNING_MESSAGE);      
        } else if(this.cmbAplicacao.isSelected() || this.cmbBanco.isSelected() ) {
            this.executarRestore(this.txtLocalBackup.getText());
        }
    }//GEN-LAST:event_btnIniciarRestoreActionPerformed

    private void btnSelecionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarArquivoActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            if(fc.getSelectedFile().isDirectory()) {
                JOptionPane.showMessageDialog(rootPane, "Selecione um arquivo para restauração do backup", "Aviso", JOptionPane.WARNING_MESSAGE);
            } else {
                this.txtLocalBackup.setText(fc.getSelectedFile().getAbsolutePath());            
            }
        } else {
            //nenhum arquivo selecionado
        }
    }//GEN-LAST:event_btnSelecionarArquivoActionPerformed

    private void cmbBancoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cmbBancoStateChanged
    }//GEN-LAST:event_cmbBancoStateChanged

    private void cmbAplicacaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cmbAplicacaoStateChanged
    }//GEN-LAST:event_cmbAplicacaoStateChanged

    private void cmbBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBancoActionPerformed
        this.btnIniciarRestore.setEnabled(this.cmbBanco.isSelected() || this.cmbAplicacao.isSelected());
    }//GEN-LAST:event_cmbBancoActionPerformed

    private void cmbAplicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAplicacaoActionPerformed
        this.btnIniciarRestore.setEnabled(this.cmbBanco.isSelected() || this.cmbAplicacao.isSelected());
    }//GEN-LAST:event_cmbAplicacaoActionPerformed

    private void executarRestore(String localBackup) {
        if(this.cmbAplicacao.isSelected()) {
            //faz backup da aplicação
            MensagemRetorno msg = Backup.restaurarAplicacao(localBackup);
            if(msg.isSucesso()) {
                JOptionPane.showMessageDialog(this, msg.getMensagem(), "Restauração de Backup da Aplicação - Sucesso", JOptionPane.INFORMATION_MESSAGE);      
            } else {
                JOptionPane.showMessageDialog(this, msg.getMensagem(), "Restauração de Backup da Aplicação - Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(this.cmbBanco.isSelected()){
            //faz backup do banco
            MensagemRetorno msg = Backup.restaurarBancoDeDados(localBackup);
            if(msg.isSucesso()) {
                JOptionPane.showMessageDialog(this, msg.getMensagem(), "Restauração de Backup do Banco - Sucesso", JOptionPane.INFORMATION_MESSAGE);      
            } else {
                JOptionPane.showMessageDialog(this, msg.getMensagem(), "Restauração de Backup do Banco - Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnIniciarRestore;
    private javax.swing.JToggleButton btnSelecionarArquivo;
    private javax.swing.JCheckBox cmbAplicacao;
    private javax.swing.JCheckBox cmbBanco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtLocalBackup;
    // End of variables declaration//GEN-END:variables
}
