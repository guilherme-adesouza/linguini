/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.MensagemRetorno;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import socket.client.UDPCliente;

/**
 *
 * @author guilherme-souza
 */
public class jdUploadFotos extends javax.swing.JDialog implements TelaUploadDownload {
    
    private File arquivoUpload;
    private File arquivoDownload;
    private String nomeArquivoDownload;

    /**
     * Creates new form jdUploadFotos
     */
    public jdUploadFotos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.btnUpload.setEnabled(false);
        this.btnDownload.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnArquivoDowload = new javax.swing.JButton();
        txtDownloadFile = new javax.swing.JLabel();
        btnDownload = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnArquivoUpload = new javax.swing.JButton();
        txtUploadFile = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Download"));

        btnArquivoDowload.setText("Selecionar Arquivo");
        btnArquivoDowload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArquivoDowloadActionPerformed(evt);
            }
        });

        txtDownloadFile.setText("Nenhum Arquivo Selecionado");

        btnDownload.setText("Fazer Download");
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnArquivoDowload)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(txtDownloadFile)
                .addGap(55, 55, 55)
                .addComponent(btnDownload)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArquivoDowload)
                    .addComponent(btnDownload)
                    .addComponent(txtDownloadFile))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Upload"));

        btnArquivoUpload.setText("Selecionar Arquivo");
        btnArquivoUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArquivoUploadActionPerformed(evt);
            }
        });

        txtUploadFile.setText("Nenhum Arquivo Selecionado");

        btnUpload.setText("Fazer Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnArquivoUpload)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(txtUploadFile)
                .addGap(66, 66, 66)
                .addComponent(btnUpload)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArquivoUpload)
                    .addComponent(btnUpload)
                    .addComponent(txtUploadFile))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(148, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(150, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnArquivoDowloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArquivoDowloadActionPerformed
        MensagemRetorno msg = UDPCliente.listaArquivos();
        if(msg.isSucesso()) {
            if(msg.getLista().size() > 0) {
                List<String> arquivos = new ArrayList<String>();
                for (Object objeto : msg.getLista()) {
                    arquivos.add(objeto.toString());
                }
                jdSelecionarArquivoServer telaSelecionaArquivo = new jdSelecionarArquivoServer(null, this, true, arquivos);
                telaSelecionaArquivo.setVisible(true);
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Nenhum arquivo encontrado!", "Retorno Servidor", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Erro ao fazer download.\n\n "+msg.getMensagem(), "Erro", JOptionPane.ERROR_MESSAGE);                    
        }
    }//GEN-LAST:event_btnArquivoDowloadActionPerformed

    private void btnArquivoUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArquivoUploadActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            if(fc.getSelectedFile().isDirectory()) {
                JOptionPane.showMessageDialog(rootPane, "Selecione um arquivo para upload", "Erro", JOptionPane.WARNING_MESSAGE);
            } else {
                this.arquivoUpload = fc.getSelectedFile();
                this.txtUploadFile.setText(this.arquivoUpload.getName());
                this.btnUpload.setEnabled(true);
            }
        } else {
            //nenhum arquivo selecionado
        }
    }//GEN-LAST:event_btnArquivoUploadActionPerformed

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            if(fc.getSelectedFile().isDirectory()) {
                MensagemRetorno msg = UDPCliente.downloadArquivo(fc.getSelectedFile().getAbsolutePath(), nomeArquivoDownload);
                if(msg.isSucesso()) {
                    JOptionPane.showMessageDialog(rootPane, "Download realizado com sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    this.arquivoDownload = null;
                    this.txtDownloadFile.setText("Nenhum Arquivo Selecionado");
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao fazer download.\n\n "+msg.getMensagem(), "Erro", JOptionPane.ERROR_MESSAGE);                    
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione uma pasta como local do arquivo para download", "Erro", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            //nenhum arquivo selecionado
        }
    }//GEN-LAST:event_btnDownloadActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        MensagemRetorno msg = UDPCliente.uploadArquivo(this.arquivoUpload);
        if(msg.isSucesso()) {
            JOptionPane.showMessageDialog(rootPane, "Upload realizado com sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.arquivoDownload = null;
            this.txtDownloadFile.setText("Nenhum Arquivo Selecionado");        
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Erro ao fazer upload.\n\n "+msg.getMensagem(), "Erro", JOptionPane.ERROR_MESSAGE);                    
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdUploadFotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdUploadFotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdUploadFotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdUploadFotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdUploadFotos dialog = new jdUploadFotos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArquivoDowload;
    private javax.swing.JButton btnArquivoUpload;
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnUpload;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel txtDownloadFile;
    private javax.swing.JLabel txtUploadFile;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setArquivoDownload(String arquivo) {
        this.nomeArquivoDownload = arquivo;
        this.txtDownloadFile.setText(arquivo);
        this.btnDownload.setEnabled(true);
    }
}
